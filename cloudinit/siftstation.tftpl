#cloud-config
hostname: ${hostname}
fqdn: ${fqdn}
# resize partitions
growpart:
  mode: auto
  devices: ['/']
# Write files to prepare:
# * manually write debian.sources
# * configure NFS
# * configure locales
write_files:
  - path: /etc/apt/sources.list.d/debian.sources
    permissions: '0644'
    owner: 'root:root'
    content: |
      Types: deb
      URIs: http://deb.debian.org/debian/
      Suites: ${distro_release} ${distro_release}-updates ${distro_release}-backports
      Components: main contrib non-free non-free-firmware
      Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg

      Types: deb
      URIs: http://security.debian.org/debian-security/
      Suites: ${distro_release}-security
      Components: main contrib non-free non-free-firmware
      Signed-By: /usr/share/keyrings/debian-archive-keyring.gpg
  - path: /etc/default/locale
    permissions: '0644'
    owner: 'root:root'
    content: |
      LANGUAGE=en_US.UTF-8
      LC_ALL=en_US.UTF-8
      LANG=en_US.UTF-8
      LC_NUMERIC=de_DE.UTF-8
      LC_TIME=de_DE.UTF-8
      LC_MONETARY=de_DE.UTF-8
      LC_PAPER=de_DE.UTF-8
      LC_MEASUREMENT=de_DE.UTF-8
# Update apt database and packages on first boot
package_update: true
package_upgrade: true
package_reboot_if_required: true
# Install packages
packages:
  - locales-all
  - htop
  - vim
  - man
  - rsync
  - xz-utils
  - zstd
  - pigz
  - tmux
  - tcpdump
  - net-tools
  - bind9-dnsutils
  - wget
  - curl
  - git
  - git-lfs
  - pwgen
  - ipcalc
  - command-not-found
  - gnupg2
  - software-properties-common
  - pipx
  - python3-dev
  - build-essential
  - automake
  - autoconf
  - libtool
  - nfs-common
  - nfswatch
  - clang
  - pkg-config
  - libscca-utils
  - yara
  - libyara-dev
  - libssl-dev
  - rustup
  # Not yet available to Debian stable...
  #- rustup
# Users and Groups
#   Sourced from users-case-vms.json
#   To enforce identic UIDs and GIDs for other users,
#   we just create them all the same on all nodes.
${replace(yamlencode("${users}"), "\"", "")}
# Disks - Mount NFS shares from the worker node
mounts:
  - [ "${worker_addr}:/read-only", /data/read-only, nfs, "defaults,ro,nofail", "0", "0" ]
  - [ "${worker_addr}:/read-write", /data/read-write, nfs, "defaults,rw,nofail", "0", "0" ]
# On each boot, do
#   Bug: NFS4 would not mount rw on /data/read-write. Do it manually.
# - [ mount, -o, 'remount,rw', /data/read-write, /data/read-write ]
#   Bug: setting hostname and domain does not work.
# - [ hostname, "${fqdn}" ]
bootcmd:
  - [ apt, update ]
  - [ apt, upgrade, -y ]
  - [ apt, clean ]
  - [ mount, -o, 'remount,rw', /data/read-write, /data/read-write ]
# On first boot, do
runcmd:
  #- [ chown, -R, root:dfir, /data ]
  #- [ chmod, 2775, /data ]
  - [ chown, -R, nobody:dfir, /data ]
  - [ chmod, 2777, /data ]
  - [ mkdir, /data/read-only ]
  - [ mkdir, /data/read-write ]
  - [ chown, -R, root:dfir, /data/read-only ]
  - [ chown, -R, root:dfir, /data/read-write ]
  - [ chmod, 2775, /data/read-only ]
  - [ chmod, 2775, /data/read-write ]
  - [ apt, update ]
  - [ apt-file, update ]
  - [ update-command-not-found ]
  - [ mount, -o, 'remount,rw', /data/read-write, /data/read-write ]
  - [ chmod, 2775, /home/dfir ]
  - [ su, -l, dfir, -c, 'rustup install stable' ]
  - [ su, -l, dfir, -c, 'cargo install xsv usnjrnl regview procbins ntdsextract2 mft2bodyfile dionysos dfir-toolkit' ]
  - [ su, -c, 'for i in $(ls /home/dfir/.cargo/bin/); do ln -s /home/dfir/.cargo/bin/$i /usr/local/bin/; done' ]
  - [ /sbin/reboot ]
